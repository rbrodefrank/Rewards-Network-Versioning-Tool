{"version":3,"sources":["versioning-tool.js","App.js","index.js"],"names":["VersioningTool","props","generate","event","preventDefault","document","getElementsByClassName","innerHTML","partnerInput","getElementsByTagName","selectedPartners","i","length","type","checked","value","push","setState","state","docs","getElementById","parser","DOMParser","reader","FileReader","files","name","includes","doc","fileName","slice","readAsBinaryString","onerror","thisReact","onload","zip","xmlString","content","target","result","PizZip","err","utf8decoder","TextDecoder","decode","_data","getContent","xmlObject","parseFromString","baseBody","paragraphs","runs","combineRuns","sectPr","removeChild","bodyClone","cloneNode","partners","partner","body","activePartner","Object","keys","mentions","forEach","key","index","global","program","currency","bonusCurrency","createPartnerXML","breakP","createElement","breakR","breakBr","setAttribute","appendChild","wParagraphs","stringXML","XMLSerializer","serializeToString","file","createDocument","section","textRuns","newSection","determineSection","skipSectionTitle","j","txt","childNodes","nodeValue","casing","HL","SL","CTA","toLowerCase","replacementVar","substring","search","word","replace","replacementWord","replaceVariable","regEx","RegExp","caseChange","lastRun","editPunctuation","punctuation","oxComma","returnVal","SLTT","firstMention","globalMentions","removeTrademarkSymbols","str","sentenceCase","titleCase","toUpperCase","connectorWords","split","map","join","undefined","last","replaceEllipsis","punctNoEllipsis","replaceExPoint","punctNoExPoints","punctAlways","punctNever","trim","lastLetter","text","out","mimeType","saveAs","paragraph","ppr","tElement","nextPpr","nextText","comparePpr","parent","parentNode","first","second","isEqualNode","addPartner","arr","sort","getElementsByName","checkboxAllText","removePartner","indexOf","splice","checkboxChange","allChecked","checkboxAll","inputArr","xNumCurrency","parentBrandIncentive","className","id","this","element","onChange","defaultChecked","onClick","accept","Component","App","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.51061579.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PizZip from 'pizzip';\r\nimport file from 'file-saver';\r\n\r\nclass VersioningTool extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            /*\r\n                \\u00AE = registered trademark\r\n                \\u2122 = trademark (TM superscript)\r\n                \\u2120 = service mark (SM superscript)\r\n                \\u2026 = ellipsis character\r\n            */\r\n            partners: [\r\n                {\r\n                    name: \"AAdvantage\\u00AE\", // Loyalty program name\r\n                    partner: \"AA\",\r\n                    program: \"AAdvantage Dining\\u2120\",\r\n                    currency: \"AAdvantage\\u00AE miles\",\r\n                    xNumCurrency: \"[3/5] {currency} per $1 spent\", // AAdvantage\\u00AE miles\r\n                    bonusCurrency: \"AAdvantage\\u00AE bonus miles\",\r\n                    parentBrandIncentive: \"for travel on American Airlines\",\r\n                    firstMention: {\r\n                        program: \"AAdvantage Dining\\u2120\",\r\n                        currency: \"AAdvantage\\u00AE miles\",\r\n                        bonusCurrency: \"AAdvantage\\u00AE bonus miles\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"AAdvantage Dining\",\r\n                        currency: \"AAdvantage miles\",\r\n                        bonusCurrency: \"AAdvantage bonus miles\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"fullSentence\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Mileage Plan\\u2122\",\r\n                    partner: \"AK\",\r\n                    program: \"Mileage Plan Dining\",\r\n                    currency: \"miles\",\r\n                    xNumCurrency: \"[3/5] {currency} per dollar spent\",\r\n                    bonusCurrency: \"bonus miles\",\r\n                    parentBrandIncentive: \"for travel on Alaska Airlines and Alaska Global Partners\",\r\n                    firstMention: {\r\n                        program: \"Mileage Plan\\u2122 Dining\",\r\n                        currency: \"Mileage Plan\\u2122 miles\",\r\n                        bonusCurrency: \"Mileage Plan\\u2122 bonus miles\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Mileage Plan Dining\",\r\n                        currency: \"miles\",\r\n                        bonusCurrency: \"bonus miles\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"fullSentence\",\r\n                        HL: \"fullSentence\",\r\n                        replaceEllipsis: true,\r\n                        replaceExPoint: true,\r\n                    },\r\n                    globalMentions: true,\r\n                },\r\n                {\r\n                    name: \"Choice Privileges\\u00AE\", // \\u00AE = registered trademark\r\n                    partner: \"CP\",\r\n                    program: \"Choice Privileges Eat & Earn\",\r\n                    currency: \"points\",\r\n                    xNumCurrency: \"5 {currency} per $1 spent\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"for rewards like free nights, gift cards and more.\",\r\n                    firstMention: {\r\n                        program: \"Choice Privileges\\u00AE Eat & Earn\",\r\n                        currency: \"Choice Privileges\\u00AE points\",\r\n                        bonusCurrency: \"Choice Privileges\\u00AE bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Choice Privileges Eat & Earn\",\r\n                        currency: \"points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"Title\",\r\n                        CTA: \"Title\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                    },\r\n                    globalMentions: true,\r\n                },\r\n                {\r\n                    name: \"Caesars Rewards\",\r\n                    partner: \"CR\",\r\n                    program: \"Caesars Rewards Dining\",\r\n                    currency: \"Reward Credits\",\r\n                    xNumCurrency: \"{currency}\",\r\n                    bonusCurrency: \"Reward Credits\",\r\n                    parentBrandIncentive: \"for use at Caesars Rewards\\u00AE destinations\",\r\n                    firstMention: {\r\n                        program: \"Caesars Rewards Dining\",\r\n                        currency: \"Reward Credits\\u00AE\",\r\n                        bonusCurrency: \"currency\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Caesars Rewards Dining\",\r\n                        currency: \"Reward Credits\",\r\n                        bonusCurrency: \"currency\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"All Caps\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"SkyMiles\",\r\n                    partner: \"DL\",\r\n                    program: \"SkyMiles Dining\",\r\n                    currency: \"miles\",\r\n                    xNumCurrency: \"[3/5] {currency} per $1 spent\",\r\n                    bonusCurrency: \"bonus miles\",\r\n                    parentBrandIncentive: \"for travel on Delta Air Lines\",\r\n                    firstMention: {\r\n                        program: \"SkyMiles\\u00AE Dining\",\r\n                        currency: \"miles\",\r\n                        bonusCurrency: \"bonus miles\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"SkyMiles Dining\",\r\n                        currency: \"miles\",\r\n                        bonusCurrency: \"bonus miles\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"All Caps\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Fuel Rewards\",\r\n                    partner: \"FR\",\r\n                    program: \"Fuel Rewards Dining\",\r\n                    currency: \"fuel savings\",\r\n                    xNumCurrency: \"10¢/gal in {currency} for every $50 spent\",\r\n                    bonusCurrency: \"Fuel Rewards Dining\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"Fuel Rewards\\u00AE Dining\",\r\n                        currency: \"Fuel Rewards\\u00AE savings\",\r\n                        bonusCurrency: \"currency\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Fuel Rewards Dining\",\r\n                        currency: \"Fuel Rewards savings\",\r\n                        bonusCurrency: \"currency\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Title\",\r\n                        CTA: \"Title\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: true,\r\n                },\r\n                {\r\n                    name: \"Free Spirit\\u2122\",\r\n                    partner: \"FS\",\r\n                    program: \"Free Spirit\\u00AE Dining\",\r\n                    currency: \"points\",\r\n                    xNumCurrency: \"[3/5] {currency} per $1 spent\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"for travel on Spirit\\u00AE\",\r\n                    firstMention: {\r\n                        program: \"Free Spirit\\u00AE Dining\",\r\n                        currency: \"Free Spirit\\u00AE points\",\r\n                        bonusCurrency: \"Free Spirit\\u00AE bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Free Spirit Dining\",\r\n                        currency: \"points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"Title\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Groupon+\",\r\n                    partner: \"GP\",\r\n                    program: \"Groupon+\",\r\n                    currency: \"cash back\",\r\n                    xNumCurrency: \"5% {currency}\",\r\n                    bonusCurrency: \"bonus cash back\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"Groupon+\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Groupon+\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Title\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Hilton Honors\",\r\n                    partner: \"HH\",\r\n                    program: \"Hilton Honors Dining\",\r\n                    currency: \"Bonus Points\",\r\n                    xNumCurrency: \"[5/8] {currency} per $1 spent\",\r\n                    bonusCurrency: \"Bonus Points\",\r\n                    parentBrandIncentive: \"for use at Hilton\\u00AE hotels worldwide\",\r\n                    firstMention: {\r\n                        program: \"Hilton Honors Dining\",\r\n                        currency: \"Hilton Honors Bonus Points\",\r\n                        bonusCurrency: \"Hilton Honors Bonus Points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Hilton Honors Dining\",\r\n                        currency: \"Bonus Points\",\r\n                        bonusCurrency: \"Bonus Points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"Lowercase\",\r\n                        CTA: \"Lowercase\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"iDine\",\r\n                    partner: \"ID\",\r\n                    program: \"iDine\",\r\n                    currency: \"benefits\",\r\n                    xNumCurrency: \"benefits\",\r\n                    bonusCurrency: \"bonus benefits\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"iDine\\u00AE\",\r\n                        currency: \"benefits\",\r\n                        bonusCurrency: \"bonus benefits\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"iDine\",\r\n                        currency: \"benefits\",\r\n                        bonusCurrency: \"bonus benefits\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"Title\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"IHG One Rewards\",\r\n                    partner: \"IHG\",\r\n                    program: \"IHG One Rewards Dine & Earn\",\r\n                    currency: \"points\",\r\n                    xNumCurrency: \"[5/8] {currency} per $1 spent\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"for use at over 6,000 IHG\\u00AE Hotels & Resorts destinations globally\",\r\n                    firstMention: {\r\n                        program: \"IHG One Rewards Dine & Earn\",\r\n                        currency: \"IHG One Rewards points\",\r\n                        bonusCurrency: \"IHG One Rewards bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"IHG One Rewards Dine & Earn\",\r\n                        currency: \"points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Marriott Bonvoy\",\r\n                    partner: \"MB\",\r\n                    program: \"Eat Around Town\",\r\n                    currency: \"points\",\r\n                    xNumCurrency: \"{currency}\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"Eat Around Town by Marriott Bonvoy\\u00AE\",\r\n                        currency: \"Marriott Bonvoy\\u00AE points\",\r\n                        bonusCurrency: \"Marriott Bonvoy\\u00AE bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Eat Around Town by Marriott Bonvoy\",\r\n                        currency: \"Marriott Bonvoy points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Title\",\r\n                        HL: \"Title\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: true,\r\n                },\r\n                {\r\n                    name: \"Neighborhood Nosh\",\r\n                    partner: \"NN\",\r\n                    program: \"Neighborhood Nosh\",\r\n                    currency: \"cash back\",\r\n                    xNumCurrency: \"cash back\",\r\n                    bonusCurrency: \"bonus cash back\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"Neighborhood Nosh\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Neighborhood Nosh\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                        replaceEllipsis: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Rapid Rewards\\u00AE\",\r\n                    partner: \"SW\",\r\n                    program: \"Rapid Rewards Dining\",\r\n                    currency: \"points\",\r\n                    xNumCurrency: \"three {currency} per dollar spent\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"that can be used towards your next flight\",\r\n                    firstMention: {\r\n                        program: \"Rapid Rewards Dining\\u00AE\",\r\n                        currency: \"Rapid Rewards\\u00AE points\",\r\n                        bonusCurrency: \"Rapid Rewards\\u00AE bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Rapid Rewards Dining\",\r\n                        currency: \"points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"Always\",\r\n                        HL: \"fullSentence\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"TrueBlue\",\r\n                    partner: \"TB\",\r\n                    program: \"TrueBlue Dining\",\r\n                    currency: \"TrueBlue points\",\r\n                    xNumCurrency: \"3 {currency} per eligible $1 spent\",\r\n                    bonusCurrency: \"bonus points\",\r\n                    parentBrandIncentive: \"for travel on JetBlue\",\r\n                    firstMention: {\r\n                        program: \"TrueBlue Dining\",\r\n                        currency: \"TrueBlue points\",\r\n                        bonusCurrency: \"TrueBlue bonus points\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"TrueBlue Dining\",\r\n                        currency: \"points\",\r\n                        bonusCurrency: \"bonus points\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"Always\",\r\n                        HL: \"Always\",\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"T-Mobile\",\r\n                    partner: \"TM\",\r\n                    program: \"T-Mobile Dining Rewards\",\r\n                    currency: \"cash back\",\r\n                    xNumCurrency: \"5% {currency}\",\r\n                    bonusCurrency: \"bonus cash back\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"T-Mobile\\u00AE Dining Rewards\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"T-Mobile Dining Rewards\",\r\n                        currency: \"cash back\",\r\n                        bonusCurrency: \"bonus cash back\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"MileagePlus\\u00AE\",\r\n                    partner: \"UA\",\r\n                    program: \"MileagePlus Dining\",\r\n                    currency: \"miles\",\r\n                    xNumCurrency: \"[3/5] {currency} per $1 spent\",\r\n                    bonusCurrency: \"bonus miles\",\r\n                    parentBrandIncentive: \"for travel on United\\u00AE\",\r\n                    firstMention: {\r\n                        program: \"MileagePlus Dining\\u2120\",\r\n                        currency: \"miles\",\r\n                        bonusCurrency: \"bonus miles\",\r\n                    },\r\n                    SLTT: {\r\n                        program: \"MileagePlus Dining\",\r\n                        currency: \"miles\",\r\n                        bonusCurrency: \"bonus miles\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"Sentence\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"\",\r\n                        HL: \"\",\r\n                        oxComma: true,\r\n                        replaceExPoint: true,\r\n                    },\r\n                    globalMentions: false,\r\n                },\r\n                {\r\n                    name: \"Upromise\\u00AE\",\r\n                    partner: \"UP\",\r\n                    program: \"Upromise Dining\",\r\n                    currency: \"cash back rewards\",\r\n                    xNumCurrency: \"[2.5%/5%] cash back rewards\",\r\n                    bonusCurrency: \"cash back rewards\",\r\n                    parentBrandIncentive: \"\",\r\n                    firstMention: {\r\n                        program: \"Upromise\\u00AE Dining\",\r\n                        currency: \"cash back rewards\",\r\n                        bonusCurrency: \"cash back rewards\",\r\n                        xNumCurrency: \"[2.5%/5%] cash back rewards per $1 spent\"\r\n                    },\r\n                    SLTT: {\r\n                        program: \"Upromise Dining\",\r\n                        currency: \"cash back rewards\",\r\n                        bonusCurrency: \"cash back rewards\",\r\n                    },\r\n                    casing: {\r\n                        SL: \"Sentence\",\r\n                        HL: \"Sentence\",\r\n                        CTA: \"All Caps\",\r\n                    },\r\n                    punctuation: {\r\n                        SL: \"Always\",\r\n                        HL: \"Always\",\r\n                        oxComma: true,\r\n                    },\r\n                    globalMentions: false,\r\n                }\r\n            ],\r\n            mentions: {\r\n                global: false,\r\n                program: false,\r\n                currency: false,\r\n                bonusCurrency: false,\r\n            },\r\n            activePartner: {},\r\n            selectedPartners: [\"AA\", \"AK\", \"CP\", \"CR\", \"DL\", \"FR\", \"FS\", \"GP\", \"HH\", \"IHG\", \"MB\", \"NN\", \"SW\", \"TB\", \"TM\", \"UA\", \"UP\"],\r\n        }\r\n    }\r\n\r\n    generate = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Clear error text\r\n        document.getElementsByClassName(\"text-error\")[0].innerHTML = \"\";\r\n        \r\n        // Get all selected partners\r\n        let partnerInput = document.getElementsByTagName('input')\r\n        let selectedPartners = [];\r\n        for (let i = 0; i < partnerInput.length; i++) {\r\n            if (partnerInput[i].type !== \"checkbox\") continue;\r\n            if (partnerInput[i].checked && partnerInput[i].value) selectedPartners.push(partnerInput[i].value);\r\n        }\r\n        this.setState({ selectedPartners: selectedPartners });\r\n\r\n        if(this.state.selectedPartners.length < 1) {\r\n            document.getElementsByClassName(\"text-error\")[0].innerHTML = \"No partners selected\";\r\n            return;\r\n        }\r\n\r\n        var docs = document.getElementById('doc');\r\n        var parser = new DOMParser();\r\n        var reader = new FileReader();\r\n\r\n        if (!docs.files || docs.files.length === 0) {\r\n            //No File Choosen\r\n            document.getElementsByClassName(\"text-error\")[0].innerHTML = \"No files selected\";\r\n        } else if (!docs.files[0].name.includes('.docx')) {\r\n            document.getElementsByClassName(\"text-error\")[0].innerHTML = \"Document is not of .docx type\";\r\n        } else {\r\n            var doc = docs.files[0];\r\n            var fileName = doc.name.slice(0, -5) + \" Versioned\";\r\n            reader.readAsBinaryString(doc);\r\n            reader.onerror = function (event) {\r\n                document.getElementsByClassName(\"text-error\")[0].innerHTML = \"error reading file\" + event;\r\n            }\r\n\r\n            const thisReact = this;\r\n            reader.onload = function (event) {\r\n                // Extract XML file from docx\r\n                const content = event.target.result;\r\n                var zip;\r\n                var xmlString;\r\n                try {\r\n                    zip = new PizZip(content);\r\n                } catch (err) {\r\n                    document.getElementsByClassName(\"text-error\")[0].innerHTML = \"Error: Not acceptable file!\";\r\n                    return;\r\n                }\r\n                var utf8decoder = new TextDecoder();\r\n                try {\r\n                    xmlString = utf8decoder.decode(zip.files[\"word/document.xml\"]._data.getContent());\r\n                } catch (err) {\r\n                    document.getElementsByClassName(\"text-error\")[0].innerHTML = \"Error: Corrupted or incorrect file!\";\r\n                    return;\r\n                }\r\n                var xmlObject = parser.parseFromString(xmlString, \"text/xml\");\r\n                var baseBody = xmlObject.getElementsByTagName(\"w:body\")[0];\r\n\r\n                // Loop through all the document's paragraphs and combine wordruns\r\n                var paragraphs = baseBody.getElementsByTagName(\"w:p\");\r\n                for (let i = 0; i < paragraphs.length; i++) {\r\n                    // Get all the word runs in the paragraph\r\n                    var runs = paragraphs[i].getElementsByTagName(\"w:r\");\r\n                    thisReact.combineRuns(paragraphs[i], runs);\r\n                }\r\n\r\n                // Remove section formatting and save it for later\r\n                var sectPr = baseBody.getElementsByTagName(\"w:sectPr\")[0];\r\n                baseBody.removeChild(sectPr);\r\n\r\n                // Create reusable body with variables\r\n                var bodyClone = baseBody.cloneNode(true);\r\n\r\n                // Version all Partners\r\n                for (let i = 0; i < thisReact.state.partners.length; i++) {\r\n                    // Check if partner is selected\r\n                    if (!thisReact.state.selectedPartners.includes(thisReact.state.partners[i].partner)) continue;\r\n                    \r\n                    // Clone base\r\n                    let body = bodyClone.cloneNode(true);\r\n                    // // Set the current activePartner\r\n                    // console.log(\"PARTNER: \"+ thisReact.state.partners[i].name);\r\n\r\n                    thisReact.setState({ activePartner: thisReact.state.partners[i] });\r\n                    const keys = Object.keys(thisReact.state.mentions);\r\n                    keys.forEach((key, index) => {\r\n                        thisReact.state.mentions = {\r\n                            global: false,\r\n                            program: false,\r\n                            currency: false,\r\n                            bonusCurrency: false,\r\n                        }\r\n                    });\r\n\r\n                    // Version for activePartner\r\n                    thisReact.createPartnerXML(body, thisReact.activePartner);\r\n\r\n                    // Add Partner to baseBody\r\n                    // Create page break\r\n                    let breakP = xmlObject.createElement(\"w:p\");\r\n                    let breakR = xmlObject.createElement(\"w:r\");\r\n                    let breakBr = xmlObject.createElement(\"w:br\");\r\n                    breakBr.setAttribute(\"w:type\", \"page\");\r\n                    breakR.appendChild(breakBr);\r\n                    breakP.appendChild(breakR);\r\n                    baseBody.appendChild(breakP);\r\n                    // Add all partner paragraphs to baseBody\r\n                    let wParagraphs = body.getElementsByTagName(\"w:p\");\r\n                    for (let p = 0; p < wParagraphs.length; p) {\r\n                        baseBody.appendChild(wParagraphs[p]);\r\n                    }\r\n                }\r\n\r\n                // Add section formatting back in\r\n                baseBody.appendChild(sectPr);\r\n\r\n                // Convert XML Object to string\r\n                var serializer = new XMLSerializer();\r\n                var stringXML = serializer.serializeToString(xmlObject);\r\n                // Replace Old XML document with new data\r\n                zip.file(\"word/document.xml\", stringXML);\r\n\r\n                thisReact.createDocument(zip, fileName);\r\n            }\r\n        }\r\n    }\r\n\r\n    createPartnerXML = (body) => {\r\n        var paragraphs = body.getElementsByTagName(\"w:p\");\r\n        var section;\r\n\r\n        // Cycle through all paragraph tags\r\n        for (let i = 0; i < paragraphs.length; i++) {\r\n            let textRuns = paragraphs[i].getElementsByTagName(\"w:t\");\r\n            let newSection = this.determineSection(textRuns);\r\n            let skipSectionTitle = false;\r\n            if (newSection) {\r\n                section = newSection;\r\n                if (newSection === \"subject\" || newSection === \"headline\") {\r\n                    for (let key in this.state.mentions) this.state.mentions[key] = false;\r\n                }\r\n                if (textRuns.length <= 1) continue;\r\n                else skipSectionTitle = true;\r\n            }\r\n\r\n            for (let j = 0; j < textRuns.length; j++) {\r\n                if (skipSectionTitle && j === 0) continue;\r\n                let txt = textRuns[j].childNodes[0].nodeValue;\r\n                if (txt.length > 0) {\r\n                    // Text to lower case before program names added (program names should be capitalized)\r\n                    if ((section === \"headline\" && this.state.activePartner.casing.HL === \"Lowercase\") \r\n                    || (section === \"subject\" && this.state.activePartner.casing.SL === \"Lowercase\")\r\n                    || (section === \"cta\" && this.state.activePartner.casing.CTA === \"Lowercase\"))\r\n                        txt = txt.toLowerCase();\r\n\r\n                    // Replace Variables\r\n                    while (txt.includes('{') && txt.includes('}')) {\r\n                        let replacementVar = txt.substring(txt.search(\"{\"), txt.search(\"}\") + 1) // Extract a variable from txt\r\n\r\n                        let word = replacementVar.toLowerCase().replace(/[{}\\s]/g, \"\"); // Change txt to lowercase & remove spacing\r\n\r\n                        let replacementWord = this.replaceVariable(word, section);\r\n                        if (replacementWord === \"\" || replacementWord === \".\") replacementVar = \" \" + replacementVar + \"|\" + replacementVar;\r\n\r\n                        let regEx = new RegExp(replacementVar);\r\n                        txt = txt.replace(regEx, replacementWord);\r\n                    }\r\n\r\n                    // Change Casing\r\n                    txt = this.caseChange(txt, section);\r\n\r\n                    // Edit punctuation\r\n                    let lastRun = j + 1 === textRuns.length ? true : false;\r\n                    txt = this.editPunctuation(txt, section, lastRun);\r\n                    \r\n                    textRuns[j].childNodes[0].nodeValue = txt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    replaceVariable = (word, section) => {\r\n        switch (word) {\r\n            case \"name\": // loyalty program name\r\n                word = \"name\";\r\n                break;\r\n            case \"partner\": // partner\r\n                word = \"partner\"\r\n                break;\r\n            case \"program\": // program\r\n                word = \"program\";\r\n                break;\r\n            case \"currency\": // currency\r\n                word = \"currency\";\r\n                break;\r\n            case \"xnumberofcurrency\": // xNumCurrency\r\n                word = \"xNumCurrency\";\r\n                break;\r\n            case \"bonuscurrency\": // bonusCurrency\r\n                word = \"bonusCurrency\";\r\n                break;\r\n            case \"parentbrandincentive\": //parentBrandIncentive\r\n                word = \"parentBrandIncentive\";\r\n                break;\r\n            case \"fullsentence\":\r\n                if ((section === \"subject\" && this.state.activePartner.punctuation.SL === \"fullSentence\") || \r\n                    (section === \"headline\" && this.state.activePartner.punctuation.HL === \"fullSentence\")) {\r\n                    return \".\";\r\n                } else return \"\";\r\n            case \"oxcomma\":\r\n                if(this.state.activePartner.punctuation.oxComma) return \",\"\r\n                else return \"\";\r\n            default:\r\n                return \"(UNDEFINED VARIABLE)\";\r\n        }\r\n\r\n        // Factor in section and # of mentions\r\n        let returnVal;\r\n        if (section === \"subject\" || section === \"title\") {\r\n            returnVal = this.state.activePartner.SLTT[word] ? this.state.activePartner.SLTT[word] : this.state.activePartner[word];\r\n        } else if (section === \"headline\" || section === \"body\" || section === \"cta\") {\r\n            if (!(word in this.state.mentions) && this.state.mentions[word]) {\r\n                returnVal = this.state.activePartner[word];\r\n            } else {\r\n                // Set return value to first mention or if first mention variable doesn't exist set to second mention\r\n                returnVal = this.state.activePartner.firstMention[word] ? this.state.activePartner.firstMention[word] : this.state.activePartner[word];\r\n                if (!this.state.activePartner.globalMentions) this.state.mentions[word] = true;\r\n                else {\r\n                    if (this.state.mentions.global === true) returnVal = this.removeTrademarkSymbols(returnVal);\r\n                    if (typeof this.state.mentions[word] !== \"undefined\") this.state.mentions.global = true;\r\n                    this.state.mentions[word] = true;\r\n                }\r\n            }\r\n        } else {\r\n            returnVal = this.state.activePartner[word];\r\n        }\r\n\r\n        if (returnVal === \"\") return returnVal;\r\n        else if (!returnVal) return returnVal = \"(UNDEFINED VARIABLE)\";\r\n        else return returnVal;\r\n    }\r\n\r\n    caseChange = (str, section, partner) => {\r\n        partner = partner || this.state.activePartner;\r\n        switch (section) {\r\n            case \"subject\":\r\n                if (partner.casing.SL === \"Sentence\") return this.sentenceCase(str);\r\n                else if (partner.casing.SL === \"Title\") return this.titleCase(str);\r\n                else if (partner.casing.SL === \"All Caps\") return str.toUpperCase();\r\n                else if (partner.casing.SL === \"Lowercase\") return str; // If lowercasing needed casing adjustment it is done before word replacement\r\n                break;\r\n            case \"headline\":\r\n                if (partner.casing.HL === \"Sentence\") return this.sentenceCase(str);\r\n                else if (partner.casing.HL === \"Title\") return this.titleCase(str);\r\n                else if (partner.casing.HL === \"All Caps\") return str.toUpperCase();\r\n                else if (partner.casing.HL === \"Lowercase\") return str; // If lowercasing needed casing adjustment it is done before word replacement\r\n                break;\r\n            case \"cta\":\r\n                if (partner.casing.CTA === \"Sentence\") return this.sentenceCase(str);\r\n                else if (partner.casing.CTA === \"Title\") return this.titleCase(str);\r\n                else if (partner.casing.CTA === \"All Caps\") return str.toUpperCase();\r\n                else if (partner.casing.CTA === \"Lowercase\") return str; // If lowercasing needed casing adjustment it is done before word replacement\r\n                break;\r\n            default:\r\n                return str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    titleCase = (str) => {\r\n        let connectorWords = [\"and\", \"on\", \"or\", \"for\", \"a\", \"an\", \"to\", \"of\", \"in\", \"at\", \"the\", \"into\", \"with\", \"by\"];\r\n        let name = this.state.activePartner.name;\r\n        return str.split(' ').map(function (word) {\r\n            if (connectorWords.includes(word)) return word;\r\n            if (word.includes(name)) return word;\r\n            else if (word[0]) return word.replace(word[0], word[0].toUpperCase());\r\n            return word;\r\n        }).join(' ');\r\n    }\r\n\r\n    sentenceCase = (str) => {\r\n        if(str === undefined) return str.replace(str[0], str[0].toUpperCase());\r\n        return str;\r\n    }\r\n\r\n    removeTrademarkSymbols = (str) => {\r\n        let newStr = str.replace(/[\\u00AE\\u2122\\u2120]/g, \"\");\r\n        return newStr\r\n    }\r\n\r\n    editPunctuation = (str, section, last) => {\r\n        let partner = this.state.activePartner;\r\n        if (partner.punctuation.replaceEllipsis) str = this.punctNoEllipsis(str);\r\n        if (partner.punctuation.replaceExPoint) str = this.punctNoExPoints(str);\r\n        switch (section) {\r\n            case \"subject\":\r\n                if (partner.punctuation.SL === \"Always\") return this.punctAlways(str, last);\r\n                else if (partner.punctuation.SL === \"Never\") return this.punctNever(str);\r\n                break;\r\n            case \"headline\":\r\n                if (partner.punctuation.HL === \"Always\") return this.punctAlways(str, last);\r\n                else if (partner.punctuation.HL === \"Never\") return this.punctNever(str);\r\n                break;\r\n            default:\r\n                return str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    punctAlways = (str, last) => {\r\n        if (last) {\r\n            str = str.trim();\r\n            if (str.length <= 2) return str;\r\n            let lastLetter = str[str.length - 1];\r\n            let punctuationArr = ['.', '?', '!', '\\u2026'];\r\n            if (punctuationArr.includes(lastLetter)) return str;\r\n            return str + \".\";\r\n        }\r\n        else return str;\r\n    }\r\n\r\n    punctNever = (str) => {\r\n        let regex = /\\.\\.\\.|[.!?\\u2026]/g;\r\n        return str.replace(regex, '');\r\n    }\r\n\r\n    punctNoExPoints = (str) => {\r\n        let regex = /[!]/g;\r\n        return str.replace(regex, '.');\r\n    }\r\n\r\n    punctNoEllipsis = (str) => {\r\n        let regex = /\\.\\.\\.|\\u2026/g;\r\n        return str.replace(regex, '.');\r\n    }\r\n\r\n    determineSection = (textRuns) => {\r\n        for (let j = 0; j < textRuns.length; j++) {\r\n            var text = textRuns[j].childNodes[0].nodeValue.toLowerCase();\r\n            if (text.includes(\"subject line (50 characters)\") || text.includes(\"subject line:\")) return \"subject\";\r\n            else if (text.includes(\"title tag (50 characters)\") || text.includes(\"title tag:\")) return \"title\";\r\n            else if (text.includes(\"headline:\" || text.includes(\"headline copy:\"))) return \"headline\";\r\n            else if (text.includes(\"body:\") || text.includes(\"body copy:\")) return \"body\";\r\n            else if (text.includes(\"cta:\")) return \"cta\";\r\n        }\r\n        return false;\r\n    }\r\n\r\n    createDocument = (zip, fileName) => {\r\n        fileName = fileName || \"Versioned Document\";\r\n\r\n        var out = zip.generate({\r\n            type: \"blob\",\r\n            mimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        });\r\n        //Output the document using Data-URI\r\n        file.saveAs(out, fileName + \".docx\");\r\n    }\r\n\r\n    combineRuns = (paragraph, runs) => {\r\n        runs = runs || paragraph.getElementsByTagName(\"w:r\");\r\n        if (runs.length <= 1) return;\r\n        for (var i = 0; i < runs.length; i++) {\r\n            var ppr = runs[i].getElementsByTagName(\"w:rPr\")[0];\r\n            var tElement = runs[i].getElementsByTagName(\"w:t\")[0];\r\n            var text;\r\n            if (tElement) {\r\n                text = tElement.childNodes[0].nodeValue;\r\n                while (i + 1 < runs.length) {\r\n                    var nextPpr = runs[i + 1].getElementsByTagName(\"w:rPr\")[0];\r\n                    var nextText = runs[i + 1].getElementsByTagName(\"w:t\")[0];\r\n                    if (this.comparePpr(ppr, nextPpr) && nextText) {\r\n                        text += nextText.childNodes[0].nodeValue;\r\n                        var parent = nextText.parentNode;\r\n                        parent.parentNode.removeChild(parent);\r\n                    } else {\r\n                        tElement.setAttribute(\"xml:space\", \"preserve\");\r\n                        runs = paragraph.getElementsByTagName(\"w:r\");\r\n                        break;\r\n                    }\r\n                }\r\n                tElement.childNodes[0].nodeValue = text;\r\n            }\r\n        }\r\n    }\r\n\r\n    comparePpr = (first, second) => {\r\n        if (typeof first == \"undefined\" || typeof second == \"undefined\") {\r\n            if (typeof first == \"undefined\" && typeof second == \"undefined\") return true;\r\n            else return false;\r\n        }\r\n        else if (first.isEqualNode(second)) return true;\r\n        else return false;\r\n    }\r\n\r\n    addPartner = (value) => {\r\n        if (!value) return;\r\n\r\n        // Add partner to selected partners array\r\n        let arr = this.state.selectedPartners;\r\n        if (arr.includes(value)) return;\r\n        arr.push(value);\r\n        arr.sort();\r\n        if (arr.length >= this.state.partners.length) {\r\n            document.getElementsByName('checkboxAll')[0].checked = true;\r\n            document.getElementById('checkboxAllText').innerHTML = this.checkboxAllText(true);\r\n        }\r\n        this.setState({ selectedPartners: arr });\r\n    }\r\n\r\n    removePartner = (value) => {\r\n        if (!value) return;\r\n\r\n        // Remove partner from selected partners array\r\n        let arr = this.state.selectedPartners;\r\n        let index = arr.indexOf(value);\r\n        if (index < 0 || index >= arr.length) return;\r\n        arr.splice(index, 1);\r\n        this.setState({ selectedPartners: arr });\r\n\r\n        // Change checkboxAll to not all selected\r\n        if (document.getElementsByName('checkboxAll')[0].checked) {\r\n            document.getElementsByName('checkboxAll')[0].checked = false;\r\n            document.getElementById('checkboxAllText').innerHTML = this.checkboxAllText(false);\r\n        }\r\n    }\r\n\r\n    checkboxChange = (event) => {\r\n        if (event.target.checked) {\r\n            if (!event.target.value) return;\r\n            this.addPartner(event.target.value);\r\n        } else {\r\n            this.removePartner(event.target.value);\r\n        }\r\n    }\r\n\r\n    checkboxAllText = (allChecked) => {\r\n        let text = allChecked ? \"Unselect all partners\" : \"Select all partners\";\r\n        return text;\r\n    }\r\n\r\n    checkboxAll = (event) => {\r\n        if (event.target.checked) {\r\n            document.getElementById('checkboxAllText').innerHTML = this.checkboxAllText(true);\r\n            let inputArr = document.getElementsByTagName('input');\r\n            for (let i = 0; i < inputArr.length; i++) {\r\n                if (inputArr[i].type !== \"checkbox\") continue;\r\n                this.addPartner(inputArr[i].value);\r\n                inputArr[i].checked = true;\r\n            }\r\n        } else {\r\n            document.getElementById('checkboxAllText').innerHTML = this.checkboxAllText(false);\r\n            let inputArr = document.getElementsByTagName('input');\r\n            for (let i = 0; i < inputArr.length; i++) {\r\n                if (inputArr[i].type !== \"checkbox\") continue;\r\n                inputArr[i].checked = false;\r\n            }\r\n            this.setState({ selectedPartners: [] });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <form>\r\n                    <div id=\"partner-checkboxes\">\r\n                        {this.state.partners.map((element, i) =>\r\n                            <div key={i} className=\"copy-size-large\">\r\n                                <input type=\"checkbox\" name={element.name} value={element.partner} onChange={this.checkboxChange} defaultChecked />\r\n                                <span>{element.partner}: {element.name}</span>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"copy-size-large\">\r\n                            <input type=\"checkbox\" name={\"checkboxAll\"} value={\"\"} onClick={this.checkboxAll} defaultChecked />\r\n                            <span id=\"checkboxAllText\">Unselect all partners</span>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"file\" id=\"doc\" accept=\".docx, application/vnd.openxmlformats-officedocument.wordprocessingml.document\" />\r\n                    <button onClick={this.generate}>Generate Document</button>\r\n                    <p className=\"text-error copy-size-large\"></p>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    // Versioning Tool by Ryan BrodeFrank\r\n}\r\n\r\nexport default VersioningTool;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport VersioningTool from './versioning-tool.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <h1 className=\"margin-bottom-less\">Versioning Tool</h1>\r\n      <Router>\r\n        <Route path=\"/versioning-tool/\" component={VersioningTool} />\r\n      </Router>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('partner-versioning-tool'));\r\n"],"sourceRoot":""}